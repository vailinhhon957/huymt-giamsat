[
  {
    "ContainingType": "Server.Controllers.NotificationController",
    "Method": "RegisterToken",
    "RelativePath": "api/notification/smoke/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.SmokeController",
    "Method": "ReceiveSmoke",
    "RelativePath": "api/smoke",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Server.Models.SmokeLog",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.SmokeController",
    "Method": "GetSmokeLogs",
    "RelativePath": "api/smoke",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.SmokeController",
    "Method": "GetLatestSmoke",
    "RelativePath": "api/smoke/latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.SmokeController",
    "Method": "GetSmokeStatus",
    "RelativePath": "api/smoke/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Server.Models.SmokeLog, Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Server.Controllers.TemperatureController",
    "Method": "ReceiveTemperature",
    "RelativePath": "api/temperature",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "data",
        "Type": "Server.Models.TemperatureLog",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.TemperatureController",
    "Method": "GetTemperatures",
    "RelativePath": "api/temperature",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.TemperatureController",
    "Method": "GetLatestTemperature",
    "RelativePath": "api/temperature/latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Server.Controllers.TemperatureController",
    "Method": "GetStatus",
    "RelativePath": "api/temperature/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[Server.Models.TemperatureLog, Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]